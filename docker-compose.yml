name: mtgo-db
services:
  postgres:
    image: postgres:latest
    container_name: postgres-prod
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      # Performance settings
      POSTGRES_SHARED_BUFFERS: 128MB
      POSTGRES_WORK_MEM: 4MB
      POSTGRES_MAINTENANCE_WORK_MEM: 64MB
      POSTGRES_EFFECTIVE_CACHE_SIZE: 512MB
      POSTGRES_CHECKPOINT_COMPLETION_TARGET: 0.7
      POSTGRES_WAL_BUFFERS: 16MB
      POSTGRES_RANDOM_PAGE_COST: 1.1
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
      # Main entrypoint for initializing the database
      - ./postgres/initdb.d:/docker-entrypoint-initdb.d:ro
      # Include additional SQL files in /pg
      - ./postgres/extensions.sql:/pg/extensions.sql:ro
      - ./postgres/schema.sql:/pg/schema.sql:ro
      - ./postgres/indexes.sql:/pg/indexes.sql:ro
    ports:
      - "127.0.0.1:5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.25'
    networks:
      - cloudflared
  pgbouncer:
    image: bitnami/pgbouncer:latest
    container_name: pgbouncer-prod
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      POSTGRESQL_HOST: postgres
      POSTGRESQL_PORT: 5432
      POSTGRESQL_USERNAME: ${POSTGRES_USER}
      POSTGRESQL_PASSWORD: ${POSTGRES_PASSWORD}
      PGBOUNCER_DATABASE: ${POSTGRES_DB}
      PGBOUNCER_PORT: ${POSTGRES_PORT}
      PGBOUNCER_BIND_ADDRESS: 0.0.0.0
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    networks:
      - cloudflared
  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared-tunnel
    restart: unless-stopped
    depends_on:
      - pgbouncer
    command: tunnel --no-autoupdate run
    environment:
      - CLOUDFLARED_TUNNEL_NAME=${CLOUDFLARED_TUNNEL_NAME}
      - CLOUDFLARED_TUNNEL_ID=${CLOUDFLARED_TUNNEL_ID}
    volumes:
      - ./cloudflared:/etc/cloudflared
    networks:
      - cloudflared
networks:
  cloudflared:
    driver: bridge
